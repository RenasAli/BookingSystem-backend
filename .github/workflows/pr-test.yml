name: CI

on:
  pull_request:
    branches:
      - 'main'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      DB_HOST: localhost
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

          
      - name: Install dependencies
        run: npm install
        
      - name: Install Newman
        run: npm install -g newman

      - name: Download Postman Collection
        run: |
          curl --location \
            --header "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
            "https://api.getpostman.com/collections/${{ secrets.COLLECTION_UID }}" \
            -o collection.json

      - name: Make script executable
        run: chmod +x ./script/create-database.sh

      - name: Run setup-test-db.sh
        run: ./script/create-database.sh
        env:
          DB_DATABASE: booking_system

      - name: Run unit & integration tests
        run: npm run test
        env:
          DB_DATABASE: test_booking_system

          
      - name: Run the app
        run: |
          nohup npx ts-node src/app.ts > app.log 2>&1 &
          sleep 10
        env:
          DB_DATABASE: booking_system

          

          
      - name: Run api tests
        run: npm run test:api
      
      - name: Show backend logs on failure
        if: failure()
        run: |
          echo "======= BACKEND LOG (app.log) ======="
          cat app.log

